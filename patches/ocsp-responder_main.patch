diff --git a/cmd/ocsp-responder/main.go b/cmd/ocsp-responder/main.go
index 52027e8cd..320a41917 100644
--- a/cmd/ocsp-responder/main.go
+++ b/cmd/ocsp-responder/main.go
@@ -88,7 +88,7 @@ type Config struct {
 
 		// Configuration for using Redis as a cache. This configuration should
 		// allow for both read and write access.
-		Redis *rocsp_config.RedisConfig `validate:"required_without=Source"`
+		Redis *rocsp_config.RedisConfig
 
 		// TLS client certificate, private key, and trusted root bundle.
 		TLS cmd.TLSConfig `validate:"required_without=Source,structonly"`
@@ -153,7 +153,7 @@ as generated by Boulder's ceremony command.
 		}
 		source, err = responder.NewMemorySourceFromFile(filename, logger)
 		cmd.FailOnError(err, fmt.Sprintf("Couldn't read file: %s", url.Path))
-	} else {
+	} else if c.OCSPResponder.Redis != nil {
 		// Set up the redis source and the combined multiplex source.
 		rocspRWClient, err := rocsp_config.MakeClient(c.OCSPResponder.Redis, clk, scope)
 		cmd.FailOnError(err, "Could not make redis client")
