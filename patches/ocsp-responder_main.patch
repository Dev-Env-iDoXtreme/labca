diff --git a/cmd/ocsp-responder/main.go b/cmd/ocsp-responder/main.go
index a5f91a07..940c18a9 100644
--- a/cmd/ocsp-responder/main.go
+++ b/cmd/ocsp-responder/main.go
@@ -178,42 +178,44 @@ as generated by Boulder's ceremony command.
 		dbMap, err := sa.InitWrappedDb(config.DB, scope, logger)
 		cmd.FailOnError(err, "While initializing dbMap")
 
-		// Set up the redis source and the combined multiplex source.
-		rocspRWClient, err := rocsp_config.MakeClient(&c.OCSPResponder.Redis, clk, scope)
-		cmd.FailOnError(err, "Could not make redis client")
-
-		err = rocspRWClient.Ping(context.Background())
-		cmd.FailOnError(err, "pinging Redis")
-
-		liveSigningPeriod := c.OCSPResponder.LiveSigningPeriod.Duration
-		if liveSigningPeriod == 0 {
-			liveSigningPeriod = 60 * time.Hour
-		}
-
-		tlsConfig, err := c.OCSPResponder.TLS.Load()
-		cmd.FailOnError(err, "TLS config")
-
-		raConn, err := bgrpc.ClientSetup(c.OCSPResponder.RAService, tlsConfig, scope, clk)
-		cmd.FailOnError(err, "Failed to load credentials and create gRPC connection to RA")
-		rac := rapb.NewRegistrationAuthorityClient(raConn)
-
-		maxInflight := c.OCSPResponder.MaxInflightSignings
-		if maxInflight == 0 {
-			maxInflight = 1000
-		}
-		liveSource := live.New(rac, int64(maxInflight), c.OCSPResponder.MaxSigningWaiters)
-
-		rocspSource, err := redis_responder.NewRedisSource(rocspRWClient, liveSource, liveSigningPeriod, clk, scope, logger)
-		cmd.FailOnError(err, "Could not create redis source")
-
-		var sac sapb.StorageAuthorityReadOnlyClient
-		if c.OCSPResponder.SAService != nil {
-			saConn, err := bgrpc.ClientSetup(c.OCSPResponder.SAService, tlsConfig, scope, clk)
-			cmd.FailOnError(err, "Failed to load credentials and create gRPC connection to SA")
-			sac = sapb.NewStorageAuthorityReadOnlyClient(saConn)
+		if c.OCSPResponder.Redis.Addrs != nil {
+			// Set up the redis source and the combined multiplex source.
+			rocspRWClient, err := rocsp_config.MakeClient(&c.OCSPResponder.Redis, clk, scope)
+			cmd.FailOnError(err, "Could not make redis client")
+
+			err = rocspRWClient.Ping(context.Background())
+			cmd.FailOnError(err, "pinging Redis")
+
+			liveSigningPeriod := c.OCSPResponder.LiveSigningPeriod.Duration
+			if liveSigningPeriod == 0 {
+				liveSigningPeriod = 60 * time.Hour
+			}
+
+			tlsConfig, err := c.OCSPResponder.TLS.Load()
+			cmd.FailOnError(err, "TLS config")
+
+			raConn, err := bgrpc.ClientSetup(c.OCSPResponder.RAService, tlsConfig, scope, clk)
+			cmd.FailOnError(err, "Failed to load credentials and create gRPC connection to RA")
+			rac := rapb.NewRegistrationAuthorityClient(raConn)
+
+			maxInflight := c.OCSPResponder.MaxInflightSignings
+			if maxInflight == 0 {
+				maxInflight = 1000
+			}
+			liveSource := live.New(rac, int64(maxInflight), c.OCSPResponder.MaxSigningWaiters)
+
+			rocspSource, err := redis_responder.NewRedisSource(rocspRWClient, liveSource, liveSigningPeriod, clk, scope, logger)
+			cmd.FailOnError(err, "Could not create redis source")
+
+			var sac sapb.StorageAuthorityReadOnlyClient
+			if c.OCSPResponder.SAService != nil {
+				saConn, err := bgrpc.ClientSetup(c.OCSPResponder.SAService, tlsConfig, scope, clk)
+				cmd.FailOnError(err, "Failed to load credentials and create gRPC connection to SA")
+				sac = sapb.NewStorageAuthorityReadOnlyClient(saConn)
+			}
+			source, err = redis_responder.NewCheckedRedisSource(rocspSource, dbMap, sac, scope, logger)
+			cmd.FailOnError(err, "Could not create checkedRedis source")
 		}
-		source, err = redis_responder.NewCheckedRedisSource(rocspSource, dbMap, sac, scope, logger)
-		cmd.FailOnError(err, "Could not create checkedRedis source")
 
 		// Load the certificate from the file path.
 		issuerCerts := make([]*issuance.Certificate, len(c.OCSPResponder.IssuerCerts))
